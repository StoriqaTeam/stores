pipeline:
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - target
    volumes:
      - /tmp/stores:/cache
  test:
    image: rust:1.25-stretch
    environment:
      - PGPASSWORD=a1a1a1a1
      - RUN_MODE=k8s
      - DATABASE_HOST=db-postgresql
      - DATABASE_URL=postgresql://stores:stores@db-postgresql/stores
    commands:
      - rustup component add rustfmt-preview
      - cargo fmt --all -- --write-mode=diff
      - apt-get update && apt-get install -y wget gnupg2
      - wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -
      - echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
      - apt-get update
      - apt-get install -y libpq5 postgresql-client-10
      - psql -U postgres -h db-postgresql -c "CREATE ROLE stores WITH PASSWORD 'stores' LOGIN REPLICATION" -c "CREATE DATABASE stores OWNER stores"
      - cargo test
    when:
      event: pull_request
  build:
    image: rust:1.25-stretch
    commands:
      - wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -
      - echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
      - apt-get update
      - apt-get install -y libpq-dev
      - cargo install diesel_cli
      - cargo build --release --locked
      - cp /usr/local/cargo/bin/diesel .
    when:
      event: push
  package:
    image: plugins/docker
    repo: storiqateam/stq-stores
    tags:
      - ${DRONE_BRANCH/\//_}
      - ${DRONE_BRANCH/\//_}${DRONE_BUILD_NUMBER}
    username: stqcommon
    password: "Tz-q6qDL#d3Mz8hm"
    dockerfile: docker/Dockerfile.run
    when:
      event: [push, tag]
  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - target
    volumes:
      - /tmp/stores:/cache
  deploy2nightly:
    image: quay.io/honestbee/drone-kubernetes
    kubernetes_server: https://api.nightly.stq.cloud
    kubernetes_token: 32txou6YhrlD3sHcpxsiCmP1m7taE1fY
    namespace: default
    deployment: stores
    repo: storiqateam/stq-stores
    container: stores
    tag: ${DRONE_BRANCH/\//_}${DRONE_BUILD_NUMBER}
    when:
      branch: master
      event: push
  test_release:
    image: jackthestripper/drone_k8s_rollout_test
    user: admin
    token: 32txou6YhrlD3sHcpxsiCmP1m7taE1fY
    addr: https://api.stable.stq.cloud
    name: stores
    entity: deployment
    ca: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwekNDQWJ1Z0F3SUJBZ0lNRlNaRkNyd2ttZEZsRmNURk1BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1UZ3dOREUxTVRZeE1ETTJXaGNOTWpnd05ERTBNVFl4TURNMgpXakFWTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTNvSk03QkI3dUF6WUFqQ1FUM3VyeWg1NW40ck5GcjdWUWFzRUhLdkMvVjgzbkVkeTJYLzcKbHlqamlYTEJVKzkvdDV5eUpCUG1VMDVmSHNNblBTTnl1bUh6M2Nmd1U4NnliVTVuUlFjOXRLTkE0UFJ1dW80cgpwMUJlUzNyZ1FoTDN6d3JBTVNYc2toZHRKZms4SjZJR3cvU3Z4Q051RStRNi8zb0JVS1RkU3QyUEZKOVpuUit0Cjl5ZitLa0VLZE1SY1RGRGplbUJCSTlhM1k0amxZQXNjd3hnbStzckpxQjYyaG8zQ1VMT0pBMEZmMEsxSnprNHQKKzRuWnBNSU1zamRKQS9mc1B6Qi9IMXpUeTdZK1pJbzJJTWVGdjg1djk1VEg3TU41YnZ2aWk1bGxyanFOQit4cgpBSXlxSHc0bWxGenlKUzBaUUNEcWhhNmYzdTRzMGIwdFN3SURBUUFCb3lNd0lUQU9CZ05WSFE4QkFmOEVCQU1DCkFRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVUWxKSWUrVWxDZ1kKbG0vd1ppYk9xdXJkUUFBT2dpSUpLdjIzbm1CUWc4MDJjM1pUdFFTZnBDTWRxTVRwRVR5SjIyTlN5elRiZUlGcgpjTEJuVCs0b2dDcUdnMm9nTHRZaDM2aVA0aFIyeXlkU094aFdRZlVCaEo5KzlxZW1iZFVOWU90SGZmakl1bE9TCko3aHY4eTFlWXN1U2Exdjl5TDNIckw2ODVVenVKR2ZyRmllMFovRUZWNlMwS1VkMFJEa3J1WnhPWVp2V01vYmoKVUZPMERyaTFFc2xMSnJXVHQzVFIwQXpZWWhjLzZJQk9NRnBDQ3hmaVFLSERFWjBSWCtCVHlGVVZtV29MYkJuRgozRGFtOFNId21PbkExbVZrR0ZVS3hwWWJ4aUgweDdQK3Ntb1lKbm82Q1NYVmpXOVI1V1NTWWFkQi9PbnBTYkoxClppU2JqVEVmMVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
    when:
      branch: feature/cd
      event: push
  deploy2stable:
    image: quay.io/honestbee/drone-kubernetes
    kubernetes_server: https://api.stable.stq.cloud
    kubernetes_token: vhkzUYmnPSI7MtJO3Et9KczuGoS0goqV
    namespace: default
    deployment: stores
    repo: storiqateam/stq-stores
    container: stores
    tag: ${DRONE_BRANCH/\//_}${DRONE_BUILD_NUMBER}
    when:
      branch: feature/cd
      event: push
  deploy2stage:
    image: quay.io/honestbee/drone-kubernetes
    kubernetes_server: https://api.stage.stq.cloud
    kubernetes_token: PW2clI0vKqLi3eywlN776rMyE7hk1pgX
    namespace: default
    deployment: stores
    repo: storiqateam/stq-stores
    container: stores
    tag: ${DRONE_BRANCH/\//_}${DRONE_BUILD_NUMBER}
    when:
      branch: release*
      event: push
  notify_slack:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: back
    icon_url: https://drone.io/favicon.ico
    username: cd.stq.cloud
    template: >
      {{#success build.status}}
        Build {{build.number}} for {{repo.name}} branch {{build.branch}} succeeded.
      {{else}}
        Build {{build.number}} for {{repo.name}} branch {{build.branch}} failed.
      {{/success}}
    when:
      event: push
      branch: [ master, release ]
      status:  [ failure, success ]
services:
  db-postgresql:
    image: postgres:10-alpine
    environment:
      - POSTGRES_PASSWORD=a1a1a1a1
    when:
      event: pull_request
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.3
    when:
      event: pull_request
